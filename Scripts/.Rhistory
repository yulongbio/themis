axis(2,at=c(-2,0,4),labels = c(-2,0,4))
plot(data_z.df[,2],type = 'l',main='WMS',ylim=c(-2,4),xaxt='n',ylab='Z score',yaxt='n',frame.plot = F,col='black',xlab='')
healthy_wgs.m=readRDS('../Data/healthy_baseline_FSI.rds')[['WMS']]
for (i in 1:ncol(healthy_wms.m)){
lines(healthy_wms.m[,i],col='grey60')
}
tiff('WMS_vs_WGS_sample_FSI.tiff',width = 5000,height = 2500,res = 600)
par(mfrow=c(2,1),mar=c(4,4,1,3))
data.df=read.table('../Data/example_WGS_WMS_FSI_bin.txt',header = T)
data_z.df=data.df
for (i in 1:ncol(data.df)){
data_z.df[,i]=(data.df[,i]-mean(data.df[,i]))/sd(data.df[,i])
}
regions.df=read.table('../Data/FSI_regions.txt',header = T)
chr.v=sub('chr','',regions.df$seqnames)
chr.v=as.numeric(chr.v)
start.v=regions.df$start
chr_start.df=data.frame(chr=chr.v,start=start.v)
idx=with(chr_start.df,order(chr,start,decreasing = F))
data_z.df=data_z.df[idx,]
chr_name.v=table(chr.v)
gaps.v=rep(NA,length(chr_name.v)-1)
for (c in 2:(length(chr_name.v))){
gaps.v[c-1]=sum(chr_name.v[1:(c-1)])
}
healthy_wms.m=readRDS('../Data/healthy_baseline_FSI.rds')[['WGS']]
plot(data_z.df[,1],type='l',main='WGS',ylim=c(-2,4),xaxt='n',ylab='Z score',yaxt='n',frame.plot = F,col='black',xlab='')
for (i in 1:ncol(healthy_wgs.m)){
lines(healthy_wgs.m[,i],col='grey60')
}
lines(data_z.df[,1],lwd=2,col='black')
abline(v=c(0,gaps.v),lty='dashed')
axis(1,at=c(gaps.v,sum(chr_name.v))-chr_name.v/2,labels = names(chr_name.v),tick = F)
axis(2,at=c(-2,0,4),labels = c(-2,0,4))
plot(data_z.df[,2],type = 'l',main='WMS',ylim=c(-2,4),xaxt='n',ylab='Z score',yaxt='n',frame.plot = F,col='black',xlab='')
healthy_wgs.m=readRDS('../Data/healthy_baseline_FSI.rds')[['WMS']]
for (i in 1:ncol(healthy_wms.m)){
lines(healthy_wms.m[,i],col='grey60')
}
lines(data_z.df[,2],lwd=2,col='black')
abline(v=c(0,gaps.v),lty='dashed')
axis(1,at=c(gaps.v,sum(chr_name.v))-chr_name.v/2,labels = names(chr_name.v),tick = F)
axis(2,at=c(-2,0,4),labels = c(-2,0,4))
dev.off()
### Plot md vs fsi vs cnv heatmap
samples.df=read.csv('../Data/feature_correlation_samples.csv',header = T)
library(pheatmap)
library(RColorBrewer)
library(gridExtra)
library(preprocessCore)
cnv.df=read.table('../Data/CIN_matrix.txt',header = T,check.names = F)
cnv.m=as.matrix(cnv.df[,-1])
health.v=samples.df[which(samples.df$Group=='HEALTHY'),]$Sample
coread.v=samples.df[which(samples.df$Group=='COREAD'),]$Sample
cnv.m=cnv.m[,c(health.v,coread.v)]
na.idx=which(apply(cnv.m,1,anyNA))
cnv.m=cnv.m[-na.idx,]
cnv_z.m=cnv.m
for (i in 1:ncol(cnv_z.m)){
t.m=as.matrix(cbind(cnv.m[,1:20],cnv.m[,i]))
t.m=normalize.quantiles(t.m)
for (t in 1:ncol(t.m)){
t.m[,t]=(t.m[,t]-mean(t.m[,t]))/sd(t.m[,t])
}
z.v=rep(NA,nrow(t.m))
for (n in 1:nrow(t.m)){
a=t.m[n,21]
b=t.m[n,1:20]
z.v[n]=(a-mean(b))/sd(b)
}
cnv_z.m[,i]=z.v
}
annotation_col = data.frame(T=c(rep('HEALTHY',20),rep('COREAD',20)))
annotation_col$T=factor(annotation_col$T,levels=c('HEALTHY','COREAD'))
rownames(annotation_col) = c(health.v,coread.v)
cnv_ph<-pheatmap(cnv_z.m,cluster_rows = F,cluster_cols = F,color = colorRampPalette(rev(brewer.pal(n = 7, name ="RdYlBu")))(7),breaks = seq(-2,2,length.out = 7),show_rownames = F,show_colnames = F,main='CNA',annotation_col = annotation_col,legend = F,annotation_legend = F,cellwidth = 4,cellheight = 0.25)
h_cnv_high.v=rep(NA,nrow(cnv_z.m));h_cnv_low.v=rep(NA,nrow(cnv_z.m))
c_cnv_high.v=rep(NA,nrow(cnv_z.m));c_cnv_low.v=rep(NA,nrow(cnv_z.m))
for (i in 1:nrow(cnv_z.m)){
h_cnv_high.v[i]=length(which(cnv_z.m[i,1:20]>2))/20
h_cnv_low.v[i]=length(which(cnv_z.m[i,1:20]<(-2)))/20
c_cnv_high.v[i]=length(which(cnv_z.m[i,21:40]>2))/20
c_cnv_low.v[i]=length(which(cnv_z.m[i,21:40]<(-2)))/20
}
md.df=read.table('MFR_matrix.txt',header = T,check.names = F)
md.m=as.matrix(md.df[,-1])
health.v=samples.df[which(samples.df$Group=='HEALTHY'),]$PID
coread.v=samples.df[which(samples.df$Group=='COREAD'),]$PID
md.m=md.m[,c(health.v,coread.v)]
md.m=md.m[-na.idx,]
md_z.m=md.m
for (i in 1:ncol(md_z.m)){
t.m=as.matrix(cbind(md.m[,1:20],md.m[,i]))
t.m=normalize.quantiles(t.m)
for (t in 1:ncol(t.m)){
t.m[,t]=(t.m[,t]-mean(t.m[,t]))/sd(t.m[,t])
}
z.v=rep(NA,nrow(t.m))
for (n in 1:nrow(t.m)){
a=t.m[n,21]
b=t.m[n,1:20]
z.v[n]=(a-mean(b))/sd(b)
}
md_z.m[,i]=z.v
}
### Plot md vs fsi vs cnv heatmap
samples.df=read.csv('../Data/feature_correlation_samples.csv',header = T)
library(pheatmap)
library(RColorBrewer)
library(gridExtra)
library(preprocessCore)
cnv.df=read.table('../Data/CIN_matrix.txt',header = T,check.names = F)
cnv.m=as.matrix(cnv.df[,-1])
health.v=samples.df[which(samples.df$Group=='HEALTHY'),]$Sample
coread.v=samples.df[which(samples.df$Group=='COREAD'),]$Sample
cnv.m=cnv.m[,c(health.v,coread.v)]
na.idx=which(apply(cnv.m,1,anyNA))
cnv.m=cnv.m[-na.idx,]
cnv_z.m=cnv.m
for (i in 1:ncol(cnv_z.m)){
t.m=as.matrix(cbind(cnv.m[,1:20],cnv.m[,i]))
t.m=normalize.quantiles(t.m)
for (t in 1:ncol(t.m)){
t.m[,t]=(t.m[,t]-mean(t.m[,t]))/sd(t.m[,t])
}
z.v=rep(NA,nrow(t.m))
for (n in 1:nrow(t.m)){
a=t.m[n,21]
b=t.m[n,1:20]
z.v[n]=(a-mean(b))/sd(b)
}
cnv_z.m[,i]=z.v
}
annotation_col = data.frame(T=c(rep('HEALTHY',20),rep('COREAD',20)))
annotation_col$T=factor(annotation_col$T,levels=c('HEALTHY','COREAD'))
rownames(annotation_col) = c(health.v,coread.v)
cnv_ph<-pheatmap(cnv_z.m,cluster_rows = F,cluster_cols = F,color = colorRampPalette(rev(brewer.pal(n = 7, name ="RdYlBu")))(7),breaks = seq(-2,2,length.out = 7),show_rownames = F,show_colnames = F,main='CNA',annotation_col = annotation_col,legend = F,annotation_legend = F,cellwidth = 4,cellheight = 0.25)
h_cnv_high.v=rep(NA,nrow(cnv_z.m));h_cnv_low.v=rep(NA,nrow(cnv_z.m))
c_cnv_high.v=rep(NA,nrow(cnv_z.m));c_cnv_low.v=rep(NA,nrow(cnv_z.m))
for (i in 1:nrow(cnv_z.m)){
h_cnv_high.v[i]=length(which(cnv_z.m[i,1:20]>2))/20
h_cnv_low.v[i]=length(which(cnv_z.m[i,1:20]<(-2)))/20
c_cnv_high.v[i]=length(which(cnv_z.m[i,21:40]>2))/20
c_cnv_low.v[i]=length(which(cnv_z.m[i,21:40]<(-2)))/20
}
md.df=read.table('../Data/MFR_matrix.txt',header = T,check.names = F)
md.m=as.matrix(md.df[,-1])
health.v=samples.df[which(samples.df$Group=='HEALTHY'),]$PID
coread.v=samples.df[which(samples.df$Group=='COREAD'),]$PID
md.m=md.m[,c(health.v,coread.v)]
md.m=md.m[-na.idx,]
md_z.m=md.m
for (i in 1:ncol(md_z.m)){
t.m=as.matrix(cbind(md.m[,1:20],md.m[,i]))
t.m=normalize.quantiles(t.m)
for (t in 1:ncol(t.m)){
t.m[,t]=(t.m[,t]-mean(t.m[,t]))/sd(t.m[,t])
}
z.v=rep(NA,nrow(t.m))
for (n in 1:nrow(t.m)){
a=t.m[n,21]
b=t.m[n,1:20]
z.v[n]=(a-mean(b))/sd(b)
}
md_z.m[,i]=z.v
}
annotation_col = data.frame(T=c(rep('HEALTHY',20),rep('COREAD',20)))
annotation_col$T=factor(annotation_col$T,levels=c('HEALTHY','COREAD'))
rownames(annotation_col) = c(health.v,coread.v)
md_ph<-pheatmap(md_z.m,cluster_rows = F,cluster_cols = F,color = colorRampPalette(rev(brewer.pal(n = 7, name ="RdYlBu")))(7),breaks = seq(-2,2,length.out = 7),show_rownames = F,show_colnames = F,main='MFR',annotation_col = annotation_col,legend = F,annotation_legend = F,cellwidth = 4,cellheight = 0.25)
h_md_high.v=rep(NA,nrow(md_z.m));h_md_low.v=rep(NA,nrow(md_z.m))
c_md_high.v=rep(NA,nrow(md_z.m));c_md_low.v=rep(NA,nrow(md_z.m))
for (i in 1:nrow(md_z.m)){
h_md_high.v[i]=length(which(md_z.m[i,1:20]>2))/20
h_md_low.v[i]=length(which(md_z.m[i,1:20]<(-2)))/20
c_md_high.v[i]=length(which(md_z.m[i,21:40]>2))/20
c_md_low.v[i]=length(which(md_z.m[i,21:40]<(-2)))/20
}
fsi.df=read.table('../Data/fsi_ratio_matrix.txt',header = T)
health.v=samples.df[which(samples.df$Group=='HEALTHY'),]$Sample
coread.v=samples.df[which(samples.df$Group=='COREAD'),]$Sample
rownames(fsi.df)=fsi.df$sample_id
fsi_h.m=t(as.matrix(fsi.df[health.v,-1]))
fsi_c.m=t(as.matrix(fsi.df[coread.v,-1]))
fsi.m=cbind(fsi_h.m,fsi_c.m)
fsi.m=fsi.m[-na.idx,]
fsi_z.m=fsi.m
for (i in 1:ncol(fsi_z.m)){
t.m=as.matrix(cbind(fsi.m[,1:20],fsi.m[,i]))
t.m=normalize.quantiles(t.m)
for (t in 1:ncol(t.m)){
t.m[,t]=(t.m[,t]-mean(t.m[,t]))/sd(t.m[,t])
}
z.v=rep(NA,nrow(t.m))
for (n in 1:nrow(t.m)){
a=t.m[n,21]
b=t.m[n,1:20]
z.v[n]=(a-mean(b))/sd(b)
}
fsi_z.m[,i]=z.v
}
annotation_col = data.frame(T=c(rep('HEALTHY',20),rep('COREAD',20)))
annotation_col$T=factor(annotation_col$T,levels=c('HEALTHY','COREAD'))
rownames(annotation_col) = c(health.v,coread.v)
fsi_ph<-pheatmap(fsi_z.m,cluster_rows = F,cluster_cols = F,color = colorRampPalette(rev(brewer.pal(n = 7, name ="RdYlBu")))(7),breaks = seq(-2,2,length.out = 7),show_rownames = F,show_colnames = F,main='FSI',annotation_col = annotation_col,legend = F,annotation_legend = F,cellwidth = 4,cellheight = 0.25)
h_fsi_high.v=rep(NA,nrow(fsi_z.m));h_fsi_low.v=rep(NA,nrow(fsi_z.m))
c_fsi_high.v=rep(NA,nrow(fsi_z.m));c_fsi_low.v=rep(NA,nrow(fsi_z.m))
for (i in 1:nrow(fsi_z.m)){
h_fsi_high.v[i]=length(which(fsi_z.m[i,1:20]>2))/20
h_fsi_low.v[i]=length(which(fsi_z.m[i,1:20]<(-2)))/20
c_fsi_high.v[i]=length(which(fsi_z.m[i,21:40]>2))/20
c_fsi_low.v[i]=length(which(fsi_z.m[i,21:40]<(-2)))/20
}
bin.m=matrix(0,nrow(fsi_z.m),6)
colnames(bin.m)=c('h_FSI','h_MD','h_CNV','c_FSI','c_MD','c_CNV')
bin.m[which(h_fsi_high.v>0.5),1]=1;bin.m[which(h_fsi_low.v>0.5),1]=(-1)
bin.m[which(h_md_high.v>0.5),2]=1;bin.m[which(h_md_low.v>0.5),2]=(-1)
bin.m[which(h_cnv_high.v>0.5),3]=1;bin.m[which(h_cnv_low.v>0.5),3]=(-1)
bin.m[which(c_fsi_high.v>0.5),4]=1;bin.m[which(c_fsi_low.v>0.5),4]=(-1)
bin.m[which(c_md_high.v>0.5),5]=1;bin.m[which(c_md_low.v>0.5),5]=(-1)
bin.m[which(c_cnv_high.v>0.5),6]=1;bin.m[which(c_cnv_low.v>0.5),6]=(-1)
annotation_col = data.frame(T=c(rep('HEALTHY',3),rep('COREAD',3)))
annotation_col$T=factor(annotation_col$T,levels=c('HEALTHY','COREAD'))
rownames(annotation_col) = colnames(bin.m)
bin_ph<-pheatmap(bin.m,cluster_rows = F,cluster_cols = F,color = c('blue','white','red'),breaks = seq(-2,2,length.out = 4),show_rownames = F,show_colnames = F,main='Differential bins',annotation_col = annotation_col,legend = T,annotation_legend = F,cellwidth = 20,cellheight = 0.25)
tiff('bin_heatmap.tif',width = 6500,height = 5000,pointsize = 12,compression = 'lzw',res = 600)
grid.arrange(fsi_ph[[4]],md_ph[[4]],cnv_ph[[4]],bin_ph[[4]],ncol=4)
dev.off()
#plot bin legend
png('bin_legend.png',width = 3000,height = 2000,res = 600)
t=seq(0,1,length.out=20)
plot(t)
legend(2,0.8,bty='n',legend = c('z > 2','z < -2'),fill = c('red','blue'),border = 'white')
dev.off()
## Plot heatmap
tiff('heatmap_legend.tif',width = 4000,height = 5000,pointsize = 12,compression = 'lzw',res = 600)
annotation_col = data.frame(T=c(rep('HEALTHY',20),rep('COREAD',20)))
annotation_col$T=factor(annotation_col$T,levels=c('HEALTHY','COREAD'))
rownames(annotation_col) = c(health.v,coread.v)
fsi_ph<-pheatmap(fsi_z.m,cluster_rows = F,cluster_cols = F,color = colorRampPalette(rev(brewer.pal(n = 7, name ="RdYlBu")))(7),breaks = seq(-2,2,length.out = 7),show_rownames = F,show_colnames = F,main='FSI',annotation_col = annotation_col,legend = T,annotation_legend = T,cellwidth = 4,cellheight = 0.25)
dev.off()
tiff('fsi_vs_mfr.tif',width = 3000,height = 2000,pointsize = 12,compression = 'lzw',res = 600)
cor.v=rep(NA,20)
for (i in 1:20){
cor.v[i]=cor(fsi_z.m[,20+i],md_z.m[,20+i],method = 'spearman')
}
hist(cor.v,breaks = seq(-0.8,0.8,length.out = 101),main = 'FSI vs MFR',xlab = '',xlim=c(-0.8,0.8))
dev.off()
tiff('fsi_vs_cnv.tif',width = 3000,height = 2000,pointsize = 12,compression = 'lzw',res = 600)
cor.v=rep(NA,20)
for (i in 1:20){
cor.v[i]=cor(fsi_z.m[,20+i],cnv_z.m[,20+i],method = 'spearman')
}
hist(cor.v,breaks = seq(-0.8,0.8,length.out = 101),main = 'FSI vs CNA',xlab = '',xlim=c(-0.8,0.8))
dev.off()
tiff('mfr_vs_cnv.tif',width = 3000,height = 2000,pointsize = 12,compression = 'lzw',res = 600)
cor.v=rep(NA,20)
for (i in 1:20){
cor.v[i]=cor(md_z.m[,20+i],cnv_z.m[,20+i],method = 'spearman')
}
hist(cor.v,breaks = seq(-0.8,0.8,length.out = 101),main = 'MFR vs CNA',xlab = '',xlim=c(-0.8,0.8))
dev.off()
data.df=read.table('../Data/MONITOR_prediction_scores.txt',header = T,check.names = F,na.strings = 'AAA')
data.df=data.df[,-c(2,3)]
colnames(data.df)=c('PID','Diagnosis','Stage','Cohort','MFR','FSI','CAFF','FEM','THEMIS')
data.df$Diagnosis=factor(data.df$Diagnosis,levels = c('HEALTHY','BRCA','COREAD','ESCA','LIHC','NSCLC','PACA','STAD'))
data.df$CAFF=10^(data.df$CAFF)
View(data.df)
write.table(data.df,file='../Data/MONITOR_prediction_scores.txt',sep = '\t')
data.df=read.table('../Data/MONITOR_prediction_scores.txt',header = T,check.names = F,na.strings = 'AAA')
data.df=data.df[,-c(2,3)]
colnames(data.df)=c('PID','Diagnosis','Stage','Cohort','MFR','FSI','CAFF','FEM','THEMIS')
data.df$Diagnosis=factor(data.df$Diagnosis,levels = c('HEALTHY','BRCA','COREAD','ESCA','LIHC','NSCLC','PACA','STAD'))
validation.df=subset(data.df,Cohort=='Test')
View(data.df)
data.df=read.table('../Data/MONITOR_prediction_scores.txt',header = T,check.names = F,na.strings = 'AAA')
data.df=data.df[,-c(2,3)]
data.df=read.table('../Data/MONITOR_prediction_scores.txt',header = T,check.names = F,na.strings = 'AAA')
data.df=data.df[,-c(2,3)]
rm(list = ls())
data.df=read.table('../Data/MONITOR_prediction_scores.txt',header = T,check.names = F,na.strings = 'AAA')
data.df=data.df[,-c(2,3)]
colnames(data.df)=c('PID','Diagnosis','Stage','Cohort','MFR','FSI','CAFF','FEM','THEMIS')
View(data.df)
data.df=read.table('../Data/MONITOR_prediction_scores.txt',header = T,check.names = F,na.strings = 'AAA')
data.df=data.df[,-c(2,3)]
colnames(data.df)=c('PID','Diagnosis','Stage','Cohort','MFR','FSI','CAFF','FEM','THEMIS')
data.df$Diagnosis=factor(data.df$Diagnosis,levels = c('HEALTHY','BRCA','COREAD','ESCA','LIHC','NSCLC','PACA','STAD'))
data.df=read.table('../Data/MONITOR_prediction_scores.txt',header = T,check.names = F,na.strings = 'AAA')
data.df=data.df[,-c(2,3)]
colnames(data.df)=c('Patient_ID','Diagnosis','Stage','Cohort','MFR','FSI','CAFF','FEM','THEMIS')
data.df$Diagnosis=factor(data.df$Diagnosis,levels = c('HEALTHY','BRCA','COREAD','ESCA','LIHC','NSCLC','PACA','STAD'))
validation.df=subset(data.df,Cohort=='Test')
discovery.df=subset(data.df,Cohort=='Training')
cancer_type.v=c('HEALTHY','BRCA','COREAD','ESCA','LIHC','NSCLC','PACA','STAD')
### Pairwise correlation between omics
library(PerformanceAnalytics)
chart.Correlation<-function (R, histogram = TRUE, method = c("pearson", "kendall", "spearman"), ...)
{
x = checkData(R, method = "matrix")
if (missing(method))
method = method[1]
cormeth <- method
panel.cor <- function(x, y, digits = 2, prefix = "", use = "pairwise.complete.obs",
method = cormeth, cex.cor, ...) {
usr <- par("usr")
on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- cor(x, y, use = use, method = method)
txt <- format(c(r, 0.123456789), digits = digits)[1]
txt <- paste(prefix, txt, sep = "")
if (missing(cex.cor))
cex <- 0.8/strwidth(txt)
test <- cor.test(as.numeric(x), as.numeric(y), method = method)
Signif <- symnum(test$p.value, corr = FALSE, na = FALSE,
cutpoints = c(0, 0.001, 0.01, 0.05, 0.1, 1), symbols = c("***",
"**", "*", ".", " "))
text(0.5, 0.5, txt, cex = cex * (abs(r) + 0.3)/1.3)
text(0.8, 0.8, Signif, cex = cex, col = 2)
}
f <- function(t) {
dnorm(t, mean = mean(x), sd = sd.xts(x))
}
dotargs <- list(...)
dotargs$method <- NULL
rm(method)
hist.panel = function(x, ... = NULL) {
par(new = TRUE)
hist(x, col = "light gray", probability = TRUE, axes = FALSE,
main = "", breaks = "FD")
lines(density(x, na.rm = TRUE), col = "red", lwd = 1)
rug(x)
}
if (histogram)
pairs(x, gap = 0, lower.panel = panel.smooth, upper.panel = panel.cor,
diag.panel = hist.panel,...)
else pairs(x, gap = 0, lower.panel = panel.smooth, upper.panel = panel.cor,...)
}
chart.Correlation(data.df[,c('MFR','FSI','CAFF','FEM')],histogram = TRUE,pch='.',method = 'spearman')
library(tidyverse)
library(stats)
library(openxlsx)
ci_plot <- function(file_in){
file_in <- file_in
file_out <- paste0(file_in, '.hist.pdf')
df <- read.table(file_in, header = T)
df$Cohort<-sub('Discovery','Training',df$Cohort)
df$Cohort<-sub('Validation','Test',df$Cohort)
df$Cohort<-factor(df$Cohort,levels = c('Training','Test'))
df=df[order(df$Cohort,decreasing = F),]
df <- df[df$Group != 'OV',]
df <- df[df$Group != 'HEALTHY',]
df <- df[df$Stage != 'unknown',]
df <- df[!is.na(df$Stage),]
df$Group <- as.character(df$Group)
df$Group <- ifelse(df$Group == 'Cancer', 'OVERALL', df$Group)
df$CI_low <- as.numeric(gsub("-.*", "", df$CI))
df$CI_high <- as.numeric(gsub(".*-", "", df$CI))
df$Sens <- df$Sens
df$CI_low <- df$CI_low
df$CI_high <- df$CI_high
df <- df %>% group_by(Stage, Group) %>% mutate(group_number = paste0(total, collapse=' | '))
df$Stage_new <- paste0(df$Stage, "\n", '(', df$group_number ,')')
df <- transform(df, Group = factor(Group, levels = c('BRCA', 'COREAD', 'ESCA', 'LIHC', 'NSCLC', 'PACA','STAD','OVERALL')))
Stage_new <- df[df$Stage_new == 'Training',]
pdf(file_out, width = 8, height = 9,pointsize = 11)
p <- ggplot(data = df, aes(x = Stage_new, y = Sens, ymin = CI_low, ymax = CI_high, colour = Cohort, fill = Cohort)) +
geom_histogram(stat = "identity", width = 0.6,  position = position_dodge(0.7)) +
geom_errorbar(position = position_dodge(width = 0.7), width = 0.2, color = 'black',size=0.4) +
scale_color_manual(values = c("#27B7B7", "#FF66B2")) +
scale_fill_manual(values = c("#27B7B7", "#FF66B2")) +
geom_point(position = position_dodge(width = 0.7), size = 0.5, color = 'black') +
theme_bw() +
facet_wrap(vars(Group), ncol = 3, scales = "free_x") +
theme(strip.background = element_blank(), strip.text = element_text(face = "bold", size = 11),legend.position = 'none') +
scale_y_continuous(limits  = c(0, 100), labels = function(x) paste0(x, "%"), breaks = seq(0, 100, by = 25)) +
ylab('Sensitivity')  +
xlab('Stage')
print(p)
dev.off()
}
ci_plot('../Data/THEMIS_sensitivity.txt')
data.df=read.table('../Data/CSO_feature.txt',header = F)
data.m=as.matrix(data.df[-1,-1])
rownames(data.m)=data.df$V1[-1]
colnames(data.m)=data.df[1,-1]
sample.df=read.csv('../Data//positive_samples_for_CSO_100spec.csv',header = T)
View(sample.df)
sample.df=read.csv('../Data//positive_samples_for_CSO_100spec.csv',header = T)
data.df=read.table('../Data/CSO_feature.txt',header = F)
View(data.df)
data.m=as.matrix(data.df[-1,-1])
rownames(data.m)=data.df$V1[-1]
colnames(data.m)=data.df[1,-1]
sample.df=read.csv('../Data//positive_samples_for_CSO_100spec.csv',header = T)
sample_train.df=subset(sample.df,Cohort=='Training')
View(data.m)
data.m=data.m[,sample.df$Sample]
colnames(data.m)=sample.df$Patient_ID[match(colnames(data.m),sample.df$Sample)]
saveRDS(data.m,file = '../Data/CSO_feature.rds')
data.df=read.table('../Data/CSO_feature.txt',header = F)
data.m=readRDS('../Data/CSO_feature.rds')
# Short fragments
mat1=matrix(NA,18,7)
rownames(mat1)=paste0('Cluster_',1:18)
colnames(mat1)=c('BRCA','NSCLC','ESCA','STAD','COREAD','LIHC','PACA')
for (cancer_type in colnames(mat1)){
target.v=sample_train.df$Patient_ID[which(sample_train.df$Group==cancer_type)]
other.v=sample_train.df$Patient_ID[which(sample_train.df$Group!=cancer_type)]
for (row_name in rownames(mat1)){
mat1[row_name,cancer_type]=wilcox.test(as.numeric(data.m[row_name,target.v]),as.numeric(data.m[row_name,other.v]),alternative='less')[['p.value']]
}
}
bk<-seq(0,10,by=0.1)
cluster_labels=c('01 - Kidney / Bile duct','02 - Colon','03 - Breast (non-basal)','04 - Prostate','05 - Brain','06 - Thyroid','07 - Skin', '08 - Squamous','09 - Liver','10 - Nerve cell','11 - Testicular','12 - Lung (adeno)','13 - Digestive','14 - Breast (basal)','15 - Uterine','16 - Bladder','17 - Mesothelium','18 - Adrenal')
pheatmap(-log10(mat1),color = colorRampPalette(rev(brewer.pal(n = 9, name ="RdYlBu")))(100),breaks = bk,cluster_rows = F,cluster_cols = F,labels_row = cluster_labels,angle_col = '45',cellheight = 15,cellwidth = 20,fontsize=10,filename = 'short_18_p_value.pdf',main='Short fragments',legend=F,width = 8,height = 6,show_rownames = F)
### Plot heat maps of cluster p-values
library(pheatmap)
library(RColorBrewer)
pheatmap(-log10(mat1),color = colorRampPalette(rev(brewer.pal(n = 9, name ="RdYlBu")))(100),breaks = bk,cluster_rows = F,cluster_cols = F,labels_row = cluster_labels,angle_col = '45',cellheight = 15,cellwidth = 20,fontsize=10,filename = 'short_18_p_value.pdf',main='Short fragments',legend=F,width = 8,height = 6,show_rownames = F)
mat<-read.delim('../Data//train_predict_99spec',header=T,stringsAsFactors = F)
mat<-read.delim('../Data/CSO_training_prediction.txt',header=T,stringsAsFactors = F)
View(mat)
Group_top1<-dcast(as.data.frame(table(mat$Group,mat$TOP1)),Var1 ~ Var2)
class(Group_top1)
library(reshape2)
Group_sort<-c('BRCA','NSCLC','ESCA','STAD','COREAD','LIHC','PACA')
mat<-read.delim('../Data/CSO_training_prediction.txt',header=T,stringsAsFactors = F)
Group_top1<-dcast(as.data.frame(table(mat$Group,mat$TOP1)),Var1 ~ Var2)
class(Group_top1)
Group_top1
rownames(Group_top1)<-Group_top1$Var1
Group_top1<-Group_top1[,-1]
Group_top1<-Group_top1[Group_sort,Group_sort]
value<-Group_top1
Group_top1$sum<-apply(Group_top1,1,function(x){sum(x)})
Group_top1
tmp<-apply(Group_top1,2,function(x){x/Group_top1$sum})
mat$Patient_ID=sample.df$Patient_ID[match(mat$PID,sample.df$PID)]
write.table(mat,file='../Data/CSO_training_prediction.txt',row.names = F,sep = '\t')
mat<-read.delim('../Data/CSO_training_prediction.txt',header=T,stringsAsFactors = F)
mat=mat[,-'PID']
mat=mat[,-c('PID')]
mat=mat[,-1]
write.table(mat,file='../Data/CSO_training_prediction.txt',row.names = F,sep = '\t')
mat<-read.delim('../Data/CSO_test_prediction.txt',header=T,stringsAsFactors = F)
mat$Patient_ID=sample.df$Patient_ID[match(mat$PID,sample.df$PID)]
mat=mat[,-1]
write.table(mat,file='../Data/CSO_test_prediction.txt',row.names = F,sep = '\t')
### Plot confusion matrices
library(ggplot2)
library(pheatmap)
library(reshape2)
Group_sort<-c('BRCA','NSCLC','ESCA','STAD','COREAD','LIHC','PACA')
mat<-read.delim('../Data/CSO_test_prediction.txt',header=T,stringsAsFactors = F)
Group_top1<-dcast(as.data.frame(table(mat$Group,mat$TOP1)),Var1 ~ Var2)
class(Group_top1)
Group_top1
mat<-read.delim('../Data/CSO_test_prediction.txt',header=T,stringsAsFactors = F)
Group_top1<-dcast(as.data.frame(table(mat$Group,mat$TOP1)),Var1 ~ Var2)
class(Group_top1)
Group_top1
library(ggplot2)
lod.df=read.csv('../Data/Mean_vaf_lod_by_feature.csv')
lod.df$Feature=factor(lod.df$Feature,levels=rev(c('MFR','FSI','CAFF','FEM','THEMIS')))
ggplot(lod.df,aes(y=Feature,x=LOD))+geom_pointrange(aes(xmin=lower,xmax=upper))+labs(x='Clinical Limit of Detection (mean VAF of cfDNA)')+ylab(NULL)+xlim(0,0.02)+theme_bw()
auc.df=read.csv('../Data/split_by_hospital_auc.csv',header = T)
View(auc.df)
library(ggplot2)
library(reshape2)
auc_train.df=auc.df[,-grep('test',colnames(auc.df))]
auc_train.df=data.frame(auc_train.df,Cohort='Training')
colnames(auc_train.df)[9:14]=c('Early_percentage','MFR','FSI','CAFF','FEM','THEMIS')
auc_test.df=auc.df[,-grep('train',colnames(auc.df))]
auc_test.df=data.frame(auc_test.df,Cohort='Test')
colnames(auc_test.df)[9:14]=c('Early_percentage','MFR','FSI','CAFF','FEM','THEMIS')
auc_split.df=rbind(auc_train.df,auc_test.df)
auc_plot.df=melt(auc_split.df,var.ids=c('MFR','FSI','CAFF','FEM','THEMIS'),measure.vars = c('MFR','FSI','CAFF','FEM','THEMIS'),variable.name = 'Feature',value.name = 'AUC')
auc_plot.df$Cohort=factor(auc_plot.df$Cohort,levels=c('Training','Test'))
ggplot(auc_plot.df,aes(x=Feature,y=AUC,fill=Cohort))+geom_boxplot()+theme_bw()+coord_cartesian(ylim = c(0, 1))
### Plot AUC distributions
auc.df=read.csv('../Data/random_split_auc.csv')
auc.df$Cohort=factor(auc.df$Cohort,levels = c('Training','Test'))
library(ggplot2)
library(reshape2)
auc_plot.df=melt(auc.df,var.ids=c('MFR','FSI','CAFF','FEM','THEMIS'),measure.vars = c(2:6),variable.name = 'Feature',value.name = 'AUC')
ggplot(auc_plot.df,aes(x=Feature,y=AUC,fill=Cohort))+geom_boxplot()+theme_bw()+coord_cartesian(ylim = c(0, 1))
auc.df=read.csv('../Data/pc_selection_auc.csv',header = T)
library(ggplot2)
library(reshape2)
auc_train.df=auc.df[,-grep('validation',colnames(auc.df))]
auc_train.df=data.frame(auc_train.df,Cohort='Training')
colnames(auc_train.df)[2:4]=c('MFR','FSI','FEM')
auc_test.df=auc.df[,-grep('train',colnames(auc.df))]
auc_test.df=data.frame(auc_test.df,Cohort='Validation')
colnames(auc_test.df)[2:4]=c('MFR','FSI','FEM')
auc_split.df=rbind(auc_train.df,auc_test.df)
auc_plot.df=melt(auc_split.df,var.ids=c('MFR','FSI','FEM'),measure.vars = c('MFR','FSI','FEM'),variable.name = 'Feature',value.name = 'AUC')
auc_plot.df$Variance=auc_plot.df$Variance*100
auc_plot.df$Cohort=factor(auc_plot.df$Cohort,levels=c('Training','Validation'))
auc_plot.df$Variance=factor(auc_plot.df$Variance)
ggplot(auc_plot.df,aes(x=Variance,y=AUC,color=Cohort))+geom_boxplot()+facet_grid(.~Feature)+xlab('Variance explained (%)')+theme_bw()
### Plot AUC
library(readxl)
auc.df=read_excel('../Data/downsample_AUC.xlsx')
auc.df=read_excel('../Data/downsample_AUC.xlsx')
library(ggplot2)
library(reshape2)
data.df=melt(auc.df,var.ids=c('MFR','FSI','CAFF','FEM','THEMIS'),measure.vars = c(3:7),variable.name = 'Feature',value.name = 'AUC')
data.df$Depth=factor(data.df$Depth,levels = c('3 M','15 M','30 M','60 M','90 M','120 M'))
data.df$Cohort=factor(data.df$Cohort,levels = c('Training','Test'))
ggplot(data.df,aes(x=Depth,y=AUC,fill=Cohort))+geom_bar(position='dodge',stat='identity')+facet_wrap(~Feature,scales = 'free_x')+theme_bw()
